에러 또는 오류의 종류
- 에러(Error) :  프로그램점으로 처리할 수 없음(JVM에서 처리)
- 예외(Exception) : 프로그래머가 해결해야 하는 오류

예외(Excption)
- 예외의 최상위 클래스는 java.langThroable;
- 그외 Excpetion 들 : 컴파일 단계에서 확인가능한 ExceptTion


예외처리란 무엇인가?
- 프로그램 실행시 발생할 수 있는 예외에 대한 처리 코를 작성\

예외처리를 왜하는가 ?
- 프로그램 실행시 비정상적인 종료를 막고, 정상 실행상태를 유지하기 위한 행위


예외처리시 사용하는 키워드 : try ~ chatch , finally, throws, thirow

예외처리방식(2가지)
- catch 해서 처리  : 예외발생시 예외에 대한 처리를 직접 하는 것(이곳에서)
- 예외 던지기(throw) : 예외 발생 시catch 해서 처리하고 던지는 것
(호출한 곳에서 처리하도록 넘긴다 - 위임_

예외를 발생 : 인위적으로 예외를 발생시킴
- throw 예외명 / 예외타입

예외를 만들기
Exception 클래스 상속받아서 예외를 정의하고 만들 수 있음
========================================================

예외를 잡어서 처리하는 방식
- try ~ catch문 : try {} catch(예외타입 변수명) {}

- try ~ catch ~ finally 문
  try { 
  		명령문(들);
      } catch(예외타입 변수명) {
	
	    예외처리할 명령문(들);
	  
	  finally {
	  
	  무조건 실행할 명령문(들)
	  
	  }
	  
- finally {} : 점상실행 또는 비정형실해야(예외발생) 시에도 무조건 실행되는 문장 작성
=================================================================
예외종류 2
RuntimeException 클래스  : 프로그래머의 실수로 발생하는 예외 - 예외처리필수
  (ArithmeticException, ClassCastException, NullPinterException,
  IndexOutofBaoudsExction;)
    
  
  
  